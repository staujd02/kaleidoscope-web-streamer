{"version":3,"sources":["Assets/logos/kaleidoscope-2.svg","enumerations.ts","Components/Stream/Stream.tsx","Components/TimeDisplay/TimeDisplay.tsx","Components/Cycler/CyclerControl/CyclerControl.tsx","Components/Curtain/Curtain.tsx","Components/Cycler/Cycler.tsx","Components/LoadScreen/LoadScreen.tsx","Components/Loader/Loader.tsx","Constants/environment.constants.ts","Components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","PlayBackMode","Stream","_this$props$source","this","props","source","title","react_default","a","createElement","allow","src","noOpMessage","React","Component","TimeDisplay","_this$props","time","onClick","secondsRemaining","calcSeconds","minutesRemaining","calcMinutes","Button","color","className","concat","milSecondsRemaining","format","Math","floor","numberToFormat","str","substring","length","CyclerControl","onSkip","onPlayBack","playBackMode","IconButton","id","aria-label","SvgIcon","xmlns","width","height","viewBox","d","Play","Pause","Curtain","open","Slide","direction","in","children","Cycler","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","increment","tick","sourceList","activeSource","state","playbackPaused","runTick","timeRemainingInCycle","setTimeout","cycle","setState","cycleIndex","millisecondsRemaining","cycleTime","event","controlsVisible","timeClicked","updateClock","nextRemainingCycle","getSource","_this2","_this$state","playbackMode","Components_Stream_Stream","Components_TimeDisplay_TimeDisplay","Components_Curtain_Curtain","Cycler_CyclerControl_CyclerControl","LoadScreen","logo","alt","Loader","finishedLoading","doneLoading","loadTime","Components_LoadScreen_LoadScreen","parseInt","process","goFullScreen","reference","current","requestFullscreen","App","createRef","ref","Components_Loader_Loader","Components_Cycler_Cycler","SourceList","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","Components_App_App","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1397b984.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kaleidoscope-2.69382820.svg\";","export enum PlayBackMode {\r\n    Pause = \"Pause\",\r\n    Play = \"Play\"\r\n}","import React from 'react';\r\nimport './Stream.css';\r\n\r\nclass Stream extends React.Component<StreamProps> {\r\n\r\n    noOpMessage(){\r\n        return \"Your browser doesn't support iFrames.\";\r\n    }\r\n\r\n    render(){\r\n        const { source, title } = this.props.source;\r\n        return (\r\n            <iframe title={title} allow={\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"} src={source}>{this.noOpMessage()}</iframe>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Stream;","import React from 'react';\r\nimport './TimeDisplay.css';\r\nimport { Button } from '@material-ui/core';\r\n\r\nclass TimeDisplay extends React.Component<TimeDisplayProps>{\r\n\r\n    render(){\r\n        const { time, onClick } = this.props;\r\n        const secondsRemaining = this.calcSeconds(time);\r\n        const minutesRemaining = this.calcMinutes(time);\r\n        return (\r\n            <Button onClick={onClick} color={\"inherit\"} className=\"time-display\">\r\n                <div className=\"time-box\">{`${minutesRemaining}:${secondsRemaining}`}</div>\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    private calcMinutes(milSecondsRemaining: number) {\r\n        return this.format(Math.floor(milSecondsRemaining / 60000));\r\n    }\r\n\r\n    private calcSeconds(milSecondsRemaining: number) {\r\n        return this.format(Math.floor((milSecondsRemaining % 60000) / 1000));\r\n    }\r\n\r\n    private format(numberToFormat: number): string {\r\n        var str = \"\" + numberToFormat;\r\n        var pad = \"00\";\r\n        return pad.substring(0, pad.length - str.length) + str;\r\n    }\r\n}\r\n\r\nexport default TimeDisplay;","import React from 'react';\r\nimport './CyclerControl.css';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport { PlayBackMode } from '../../../enumerations';\r\n\r\nclass CyclerControl extends React.Component<CyclerControlProps, CyclerControlState> {\r\n\r\n    render(){\r\n        const { onSkip, onPlayBack, playBackMode } = this.props;\r\n        return (\r\n            <div className='cycler-controls'>\r\n                <IconButton id=\"skip-control\" onClick={onSkip} aria-label=\"skip\">\r\n                    <SvgIcon xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\r\n                        <path d=\"M12 36l17-12-17-12v24zm20-24v24h4V12h-4z\" />\r\n                    </SvgIcon>\r\n                </IconButton>\r\n                <IconButton id=\"playback-control\" onClick={onPlayBack} aria-label={playBackMode}>\r\n                    {playBackMode === PlayBackMode.Play && \r\n                        <SvgIcon xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                            <path d=\"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\r\n                        </SvgIcon>}\r\n                    {playBackMode === PlayBackMode.Pause &&\r\n                        <SvgIcon xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\r\n                            <path d=\"M18 32h4V16h-4v16zm6-28C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16zm2-8h4V16h-4v16z\" />\r\n                        </SvgIcon>}\r\n                </IconButton>\r\n            </div>);\r\n    }\r\n\r\n}\r\n\r\nexport default CyclerControl;","import React from 'react';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nclass Curtain extends React.Component<CurtainProps, CurtainState> {\r\n    render() {\r\n        const { open } = this.props;\r\n        return (\r\n            <Slide direction={'down'} in={open}>\r\n                <div id=\"cycler-controls\">\r\n                    {this.props.children}\r\n                </div>\r\n            </Slide>);\r\n    }\r\n}\r\n\r\nexport default Curtain;","import React from 'react';\r\nimport Stream from '../Stream/Stream';\r\nimport TimeDisplay from '../TimeDisplay/TimeDisplay';\r\nimport CyclerControl from './CyclerControl/CyclerControl';\r\nimport Curtain from '../Curtain/Curtain';\r\nimport { PlayBackMode } from '../../enumerations';\r\n\r\nclass Cycler extends React.Component<CyclerProps, CyclerState> {\r\n    \r\n    private readonly increment = 50;\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            activeSource: 0,\r\n            millisecondsRemaining: this.props.cycleTime,\r\n            controlsVisible: false,\r\n            playbackPaused: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { activeSource } = this.state;\r\n        const { sourceList } = this.props;\r\n        setTimeout(() => this.tick(sourceList, activeSource), this.increment);\r\n    }\r\n    \r\n    render() {\r\n        const { activeSource, millisecondsRemaining,\r\n            controlsVisible, playbackPaused } = this.state;\r\n        let playbackMode = playbackPaused ? PlayBackMode.Play : PlayBackMode.Pause;\r\n        return (\r\n            <div>\r\n                <Stream source={this.getSource(activeSource)} />\r\n                <TimeDisplay onClick={this.timeClicked} \r\n                    time={millisecondsRemaining} />\r\n                <Curtain open={controlsVisible}>\r\n                    <CyclerControl onSkip={this.onSkip}\r\n                        playBackMode={playbackMode}\r\n                        onPlayBack={this.onPlayBack} />\r\n                </Curtain>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    tick = (sourceList: Source[], activeSource: number) => {\r\n        if (!this.state.playbackPaused)\r\n            this.runTick(this.timeRemainingInCycle());\r\n        setTimeout(() => this.tick(sourceList, activeSource), this.increment);\r\n    }\r\n    \r\n    cycle = () => {\r\n        const { activeSource } = this.state;\r\n        const { sourceList } = this.props;\r\n        this.setState({\r\n           activeSource: this.cycleIndex(activeSource, sourceList.length),\r\n           millisecondsRemaining: this.props.cycleTime\r\n        });\r\n    }\r\n\r\n\r\n    onSkip = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        this.cycle();\r\n        this.setState({ controlsVisible: false});\r\n    }\r\n    \r\n    onPlayBack = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        this.setState({ playbackPaused: !this.state.playbackPaused});\r\n        this.setState({ controlsVisible: false});\r\n    }\r\n\r\n    timeClicked = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        this.setState({ controlsVisible: !this.state.controlsVisible });\r\n    }\r\n\r\n    private updateClock = (nextRemainingCycle: number) => {\r\n        this.setState({\r\n            millisecondsRemaining: nextRemainingCycle\r\n        });\r\n    }\r\n\r\n    private runTick(nextRemainingCycle: number) {\r\n        if (nextRemainingCycle > this.increment)\r\n            this.updateClock(nextRemainingCycle);\r\n        else\r\n            this.cycle();\r\n    }\r\n\r\n    private timeRemainingInCycle() {\r\n        const { millisecondsRemaining } = this.state;\r\n        let nextRemainingCycle = millisecondsRemaining - this.increment;\r\n        return nextRemainingCycle;\r\n    }\r\n\r\n    private cycleIndex(activeSource: number, length: number) {\r\n        activeSource++;\r\n        if (activeSource === length) {\r\n            activeSource = 0;\r\n        }\r\n        return activeSource;\r\n    }\r\n\r\n    private getSource = (activeSource: number) => {\r\n        return this.props.sourceList[activeSource];\r\n    }\r\n}\r\n\r\nexport default Cycler;","import React from 'react';\r\nimport logo from '../../Assets/logos/kaleidoscope-2.svg';\r\n\r\nconst LoadScreen: React.FC = () => \r\n    <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>Starting Up The Streams...</p>\r\n    </header>\r\n\r\nexport default LoadScreen;","import React from 'react';\r\nimport LoadScreen from '../LoadScreen/LoadScreen';\r\n\r\nclass Loader extends React.Component<LoaderProps, LoaderState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            doneLoading: false\r\n        }\r\n        setTimeout(this.finishedLoading, this.props.loadTime);\r\n    }\r\n\r\n    finishedLoading = () => {\r\n        this.setState({\r\n            doneLoading: true\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const { doneLoading } = this.state;\r\n        return (\r\n            <div>\r\n                {doneLoading ? this.props.children : (<LoadScreen />)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loader;","const TEN_MINUTES = \"600000\";\r\nconst FIVE_SECONDS = \"5000\";\r\nconst cycleTime = parseInt(process.env.REACT_APP_CYCLE_TIME || TEN_MINUTES);\r\nconst loadTime = parseInt(process.env.REACT_APP_LOAD_TIME || FIVE_SECONDS);\r\nexport{\r\n    TEN_MINUTES,\r\n    FIVE_SECONDS,\r\n    cycleTime,\r\n    loadTime\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Cycler from '../Cycler/Cycler';\r\nimport SourceList from '../../source-list.json';\r\nimport Loader from '../Loader/Loader';\r\nimport { loadTime, cycleTime } from '../../Constants/environment.constants';\r\n\r\nconst App: React.FC = () => {\r\n  let reference = React.createRef() as React.RefObject<HTMLDivElement>;\r\n  return (\r\n    <div className=\"App\" ref={reference} onClick={() => goFullScreen(reference)}>\r\n      <Loader loadTime={loadTime}>\r\n        <Cycler sourceList={SourceList} cycleTime={cycleTime} />\r\n      </Loader>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst goFullScreen = (reference: React.RefObject<HTMLDivElement>): void => {\r\n  if (reference.current)\r\n    reference.current.requestFullscreen();\r\n}\r\n\r\nexport default App;\r\n","const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        checkValidServiceWorker(swUrl, config);\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.register();"],"sourceRoot":""}