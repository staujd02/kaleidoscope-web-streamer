{"version":3,"sources":["Assets/logos/kaleidoscope-2.svg","enumerations.ts","Constants/environment.constants.ts","Components/Headers/AppHeader.tsx","Components/LoadScreen/LoadScreen.tsx","Components/Configuration/ConfigureButton.tsx","Components/Loader/Loader.tsx","Components/Stream/Stream.tsx","Components/TimeDisplay/TimeDisplay.tsx","Components/Cycler/CyclerControl/CyclerControl.tsx","Components/Curtain/Curtain.tsx","Components/Cycler/Cycler.tsx","Components/Configuration/SourceDetails/SourceDetails.tsx","Components/Headers/ConfigurationHeader.tsx","Components/Configuration/SourceListCard/SourceList.tsx","Components/Configuration/SourceListCard/SourceListCard.tsx","Components/Configuration/StreamPreview/StreamPreview.tsx","Components/Configuration/Configuration.tsx","Exceptions/MissingPropertyException.ts","Exceptions/DurationOutOfBounds.ts","Exceptions/InvalidSortOrderException.ts","SchemaValidators/Source.ts","SchemaValidators/SourceRepository.ts","LocalStorage/SourceRepo.ts","Components/Kaleidoscope/Kaleidoscope.tsx","Components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","PlayBackMode","LOAD_TIME","parseInt","process","AppHeader","props","react_default","a","createElement","className","children","LoadScreen","Headers_AppHeader","src","logo","alt","ConfigureButton","buttonClickHandler","this","Button","color","onClick","React","Component","Loader","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","finishedLoading","setState","doneLoading","state","setTimeout","loadTime","handleConfigureClick","Components_LoadScreen_LoadScreen","ConfigureButton_ConfigureButton","Stream","_this$props$source","source","title","id","allow","noOpMessage","TimeDisplay","_this$props","time","secondsRemaining","calcSeconds","minutesRemaining","calcMinutes","concat","milSecondsRemaining","format","Math","floor","numberToFormat","str","substring","length","CyclerControl","onSkip","onPlayBack","onMenuOpen","playBackMode","IconButton","aria-label","SvgIcon","xmlns","width","height","viewBox","d","Play","Pause","Curtain","open","Slide","direction","in","Cycler","increment","tick","sourceList","activeSource","playbackPaused","runTick","timeRemainingInCycle","cycle","nextSourceIndex","cycleIndex","millisecondsRemaining","duration","event","controlsVisible","timeClicked","updateClock","nextRemainingCycle","getSource","_this2","_this$state","playbackMode","Fragment","Components_Stream_Stream","Components_TimeDisplay_TimeDisplay","Components_Curtain_Curtain","Cycler_CyclerControl_CyclerControl","openMenuCallback","SourceDetails","handleToggle","name","checked","target","handleErrors","handleUpdate","objectSpread","defineProperty","transformUp","ratio","value","toString","handleChange","_event$target","optionalErrorState","error","ex","Card","CardContent","Typography","gutterBottom","FormGroup","TextField","label","type","onChange","helperText","Grid","InputLabel","Input","endAdornment","Switch","isEnabled","ConfigurationHeader","SourceList","selectedIndex","search","sources","filter","includes","sort","b","sortOrder","map","idx","ListItem","key","button","undefined","selected","handleListItemClick","ListItemText","primary","List","index","preventDefault","handleSelectSource","SourceListCard","e","margin","variant","SourceList_SourceList","StreamPreview","Configuration","s","selectedSource","found","sourceRepo","streams","findIndex","copy","handleSave","find","Headers_ConfigurationHeader","Container","doneConfiguring","SourceListCard_SourceListCard","SourceDetails_SourceDetails","StreamPreview_StreamPreview","MissingPropertyException","missingProperty","Error","DurationOutOfBoundsException","outOfRangeDuration","InvalidSortOrderException","invalidSortOrder","SourceValidation","constraints","propertyValidation","forEach","k","durationValidation","sortOrderValidation","validateState","sourceRepositoryState","c","SourceRepositoryValidation","streamValidation","stream","validate","SourceRepo","repoString","localStorage","getItem","JSON","parse","emptyRepo","sourceRepository","stringify","setItem","console","log","Kaleidoscope","openConfiguration","isConfiguring","updatedSourceRepo","save","doneConfiguringCallback","load","Configuration_Configuration_Configuration","Components_Loader_Loader","Components_Cycler_Cycler","goFullScreen","reference","current","requestFullscreen","App","createRef","ref","Kaleidoscope_Kaleidoscope","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","Components_App_App","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.51ead3f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kaleidoscope-2.69382820.svg\";","export enum PlayBackMode {\r\n    Pause = \"Pause\",\r\n    Play = \"Play\"\r\n}","const TEN_MINUTES = \"600000\";\r\nconst FIVE_SECONDS = \"5000\";\r\nconst APP_CACHE_V1_KEY = \"APP_CACHE_V1_KEY \";\r\nconst LOAD_TIME = parseInt(process.env.REACT_APP_LOAD_TIME || FIVE_SECONDS);\r\nexport {\r\n    APP_CACHE_V1_KEY,\r\n    FIVE_SECONDS,\r\n    LOAD_TIME,\r\n    TEN_MINUTES,\r\n}","import React from 'react';\r\n\r\nconst AppHeader: React.FunctionComponent = props => (\r\n    <header className=\"App-header\">\r\n        {props.children}\r\n    </header>\r\n);\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport logo from '../../Assets/logos/kaleidoscope-2.svg';\r\nimport AppHeader from '../Headers/AppHeader';\r\n\r\nconst LoadScreen: React.FC = props =>\r\n    <AppHeader>\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>Starting Up The Streams...</p>\r\n        {props.children}\r\n    </AppHeader>\r\n\r\nexport default LoadScreen;","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\n\r\nexport default class ConfigureButton extends React.Component<ConfigureButtonProps> {\r\n    render(){\r\n        const { buttonClickHandler } = this.props;\r\n        return <Button color=\"primary\" className=\"configure-button\" onClick={buttonClickHandler}>Configure Streams</Button>\r\n    }\r\n}","import React from 'react';\r\nimport LoadScreen from '../LoadScreen/LoadScreen';\r\nimport ConfigureButton from '../Configuration/ConfigureButton';\r\n\r\nclass Loader extends React.Component<LoaderProps, LoaderState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            doneLoading: false\r\n        }\r\n        setTimeout(this.finishedLoading, this.props.loadTime);\r\n    }\r\n\r\n    finishedLoading = () => {\r\n        this.setState({\r\n            doneLoading: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { doneLoading } = this.state;\r\n        const { handleConfigureClick } = this.props;\r\n        if (doneLoading)\r\n            return this.props.children;\r\n        else\r\n            return (\r\n                <LoadScreen>\r\n                    <ConfigureButton buttonClickHandler={handleConfigureClick} />\r\n                </LoadScreen>\r\n            );\r\n    }\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport './Stream.scss';\r\n\r\nclass Stream extends React.Component<StreamProps> {\r\n\r\n    noOpMessage(){\r\n        return \"Your browser doesn't support iFrames.\";\r\n    }\r\n\r\n    render(){\r\n        const { source, title } = this.props.source;\r\n        return (\r\n            <iframe title={title} id=\"player\" allow={\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"} src={source}>{this.noOpMessage()}</iframe>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Stream;","import React from 'react';\r\nimport './TimeDisplay.scss';\r\nimport { Button } from '@material-ui/core';\r\n\r\nclass TimeDisplay extends React.Component<TimeDisplayProps>{\r\n\r\n    render(){\r\n        const { time, onClick } = this.props;\r\n        const secondsRemaining = this.calcSeconds(time);\r\n        const minutesRemaining = this.calcMinutes(time);\r\n        return (\r\n            <Button onClick={onClick} color={\"inherit\"} className=\"time-display\">\r\n                <div className=\"time-box\">{`${minutesRemaining}:${secondsRemaining}`}</div>\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    private calcMinutes(milSecondsRemaining: number) {\r\n        return this.format(Math.floor(milSecondsRemaining / 60000));\r\n    }\r\n\r\n    private calcSeconds(milSecondsRemaining: number) {\r\n        return this.format(Math.floor((milSecondsRemaining % 60000) / 1000));\r\n    }\r\n\r\n    private format(numberToFormat: number): string {\r\n        var str = \"\" + numberToFormat;\r\n        var pad = \"00\";\r\n        return pad.substring(0, pad.length - str.length) + str;\r\n    }\r\n}\r\n\r\nexport default TimeDisplay;","import React from 'react';\r\nimport './CyclerControl.scss';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport { PlayBackMode } from '../../../enumerations';\r\n\r\nclass CyclerControl extends React.Component<CyclerControlProps, CyclerControlState> {\r\n\r\n    render() {\r\n        const { onSkip, onPlayBack, onMenuOpen, playBackMode } = this.props;\r\n        return (\r\n            <div className='cycler-controls'>\r\n                <IconButton id=\"skip-control\" onClick={onSkip} aria-label=\"skip\">\r\n                    <SvgIcon xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\r\n                        <path d=\"M12 36l17-12-17-12v24zm20-24v24h4V12h-4z\" />\r\n                    </SvgIcon>\r\n                </IconButton>\r\n                <IconButton id=\"playback-control\" onClick={onPlayBack} aria-label={playBackMode}>\r\n                    {playBackMode === PlayBackMode.Play &&\r\n                        <SvgIcon xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                            <path d=\"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\r\n                        </SvgIcon>}\r\n                    {playBackMode === PlayBackMode.Pause &&\r\n                        <SvgIcon xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\r\n                            <path d=\"M18 32h4V16h-4v16zm6-28C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16zm2-8h4V16h-4v16z\" />\r\n                        </SvgIcon>}\r\n                </IconButton>\r\n                <IconButton id=\"menu-control\" onClick={onMenuOpen} aria-label=\"open menu\">\r\n                    <SvgIcon xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\r\n                        <path d=\"M28,0C12.561,0,0,12.561,0,28s12.561,28,28,28s28-12.561,28-28S43.439,0,28,0z M28,54C13.663,54,2,42.336,2,28\r\n                            S13.663,2,28,2s26,11.664,26,26S42.337,54,28,54z\"/>\r\n                        <path d=\"M40,16H16c-0.553,0-1,0.448-1,1s0.447,1,1,1h24c0.553,0,1-0.448,1-1S40.553,16,40,16z\"/>\r\n                        <path d=\"M40,27H16c-0.553,0-1,0.448-1,1s0.447,1,1,1h24c0.553,0,1-0.448,1-1S40.553,27,40,27z\"/>\r\n                        <path d=\"M40,38H16c-0.553,0-1,0.448-1,1s0.447,1,1,1h24c0.553,0,1-0.448,1-1S40.553,38,40,38z\"/>\r\n                    </SvgIcon>\r\n                </IconButton>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default CyclerControl;","import React from 'react';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nclass Curtain extends React.Component<CurtainProps, CurtainState> {\r\n    render() {\r\n        const { open } = this.props;\r\n        return (\r\n            <Slide direction={'down'} in={open}>\r\n                <div id=\"cycler-controls\">\r\n                    {this.props.children}\r\n                </div>\r\n            </Slide>);\r\n    }\r\n}\r\n\r\nexport default Curtain;","import React from 'react';\r\nimport Stream from '../Stream/Stream';\r\nimport TimeDisplay from '../TimeDisplay/TimeDisplay';\r\nimport CyclerControl from './CyclerControl/CyclerControl';\r\nimport Curtain from '../Curtain/Curtain';\r\nimport { PlayBackMode } from '../../enumerations';\r\n\r\nclass Cycler extends React.Component<CyclerProps, CyclerState> {\r\n    \r\n    private readonly increment = 50;\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            activeSource: 0,\r\n            millisecondsRemaining: this.props.sourceList[0].duration,\r\n            controlsVisible: false,\r\n            playbackPaused: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { activeSource } = this.state;\r\n        const { sourceList } = this.props;\r\n        setTimeout(() => this.tick(sourceList, activeSource), this.increment);\r\n    }\r\n    \r\n    render() {\r\n        const { activeSource, millisecondsRemaining,\r\n            controlsVisible, playbackPaused } = this.state;\r\n        let playbackMode = playbackPaused ? PlayBackMode.Play : PlayBackMode.Pause;\r\n        return (\r\n            <>\r\n                <Stream source={this.getSource(activeSource)} />\r\n                <TimeDisplay onClick={this.timeClicked} \r\n                    time={millisecondsRemaining} />\r\n                <Curtain open={controlsVisible}>\r\n                    <CyclerControl onSkip={this.onSkip}\r\n                        playBackMode={playbackMode}\r\n                        onPlayBack={this.onPlayBack}\r\n                        onMenuOpen={this.props.openMenuCallback} />\r\n                </Curtain>\r\n            </>\r\n        );\r\n    }\r\n    \r\n    tick = (sourceList: Source[], activeSource: number) => {\r\n        if (!this.state.playbackPaused)\r\n            this.runTick(this.timeRemainingInCycle());\r\n        setTimeout(() => this.tick(sourceList, activeSource), this.increment);\r\n    }\r\n    \r\n    cycle = () => {\r\n        const { activeSource } = this.state;\r\n        const { sourceList } = this.props;\r\n        let nextSourceIndex = this.cycleIndex(activeSource, sourceList.length);\r\n        this.setState({\r\n           activeSource: nextSourceIndex,\r\n           millisecondsRemaining: this.props.sourceList[nextSourceIndex].duration\r\n        });\r\n    }\r\n\r\n\r\n    onSkip = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        this.cycle();\r\n        this.setState({ controlsVisible: false});\r\n    }\r\n    \r\n    onPlayBack = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        this.setState({ playbackPaused: !this.state.playbackPaused});\r\n        this.setState({ controlsVisible: false});\r\n    }\r\n\r\n    timeClicked = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        this.setState({ controlsVisible: !this.state.controlsVisible });\r\n    }\r\n\r\n    private updateClock = (nextRemainingCycle: number) => {\r\n        this.setState({\r\n            millisecondsRemaining: nextRemainingCycle\r\n        });\r\n    }\r\n\r\n    private runTick(nextRemainingCycle: number) {\r\n        if (nextRemainingCycle > this.increment)\r\n            this.updateClock(nextRemainingCycle);\r\n        else\r\n            this.cycle();\r\n    }\r\n\r\n    private timeRemainingInCycle() {\r\n        const { millisecondsRemaining } = this.state;\r\n        let nextRemainingCycle = millisecondsRemaining - this.increment;\r\n        return nextRemainingCycle;\r\n    }\r\n\r\n    private cycleIndex(activeSource: number, length: number) {\r\n        activeSource++;\r\n        if (activeSource === length) {\r\n            activeSource = 0;\r\n        }\r\n        return activeSource;\r\n    }\r\n\r\n    private getSource = (activeSource: number) => {\r\n        return this.props.sourceList[activeSource];\r\n    }\r\n}\r\n\r\nexport default Cycler;","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Input from '@material-ui/core/Input';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default class SourceDetails extends React.Component<SourceDetailsProps, SourceDetailsState> {\r\n\r\n    constructor(props: SourceDetailsProps) {\r\n        super(props);\r\n        this.state = {\r\n            error: '',\r\n        }\r\n    }\r\n    \r\n    handleToggle = (name: string) => (event: any) => {\r\n        const { checked } = event.target;\r\n        this.handleErrors(() =>\r\n            this.props.handleUpdate({\r\n                ...this.props.source!,\r\n                [name]: !checked\r\n            }), name);\r\n    }\r\n\r\n    transformUp = (ratio: number) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        event.target.value = (parseInt(event.target.value) * ratio).toString();\r\n        this.handleChange(event);\r\n    }\r\n\r\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = event.target;\r\n        this.handleErrors(() =>\r\n            this.props.handleUpdate({\r\n                ...this.props.source!,\r\n                [name]: value\r\n            }), name);\r\n    }\r\n\r\n    handleErrors = (call: () => void, optionalErrorState?: string) => {\r\n        try {\r\n            this.setState({ error: '' }, call);\r\n        } catch (ex) {\r\n            this.setState({\r\n                error: optionalErrorState ? optionalErrorState : ex\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { error } = this.state;\r\n        const conversionRatio = 1000;\r\n        return (\r\n            <Card className=\"card source-detail\">\r\n                <CardContent>\r\n                    <Typography className=\"title\" color=\"textSecondary\" gutterBottom>\r\n                        Stream Details\r\n                    </Typography>\r\n                    {this.props.source === null &&\r\n                        <Typography className=\"placeholder\">\r\n                            Select a stream to view it's details.\r\n                        </Typography>}\r\n                    {this.props.source !== null && (\r\n                        <FormGroup>\r\n                            <TextField name='title' label=\"Source Name\" type=\"text\" \r\n                                onChange={this.handleChange} value={this.props.source.title} />\r\n                            <TextField name='source' className=\"beefy\" label=\"URL\" onChange={this.handleChange} \r\n                                type=\"url\" helperText=\"Must be embeddable\" value={this.props.source.source} />\r\n                            <Grid>\r\n                                <InputLabel id=\"durationLabel\" error={error === 'duration'} className=\"inline-lb\">Duration</InputLabel>\r\n                                <Input id=\"duration\" endAdornment={'Seconds'} \r\n                                    name=\"duration\" onChange={this.transformUp(conversionRatio)} \r\n                                    type=\"number\" value={this.props.source.duration / conversionRatio} />\r\n                            </Grid>\r\n                            <Grid>\r\n                                <InputLabel className=\"inline-lb\">Enabled</InputLabel>\r\n                                <Switch id=\"enable-toggle\" name='isEnabled' onClick={this.handleToggle('isEnabled')}\r\n                                    type=\"button\" checked={this.props.source.isEnabled} />\r\n                            </Grid>\r\n                        </FormGroup>\r\n                    )}\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ConfigurationHeader: React.FunctionComponent = props => (\r\n    <header className=\"config-viewport\">\r\n        <div className=\"config-container\">\r\n            {props.children}\r\n        </div>\r\n    </header>\r\n);\r\n\r\nexport default ConfigurationHeader;","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nexport default class SourceList extends React.Component<SourceListProps, SourceListState> {\r\n\r\n    constructor(props: SourceListProps) {\r\n        super(props);\r\n        this.state = {\r\n            selectedIndex: -1\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { selectedIndex } = this.state;\r\n        const { search } = this.props;\r\n        const sourceList = this.props.sources\r\n            .filter(source => search ? source.title.includes(search) \r\n            || source.source.includes(search) : true)\r\n            .sort((a, b) => a.sortOrder - b.sortOrder)\r\n            .map((source, idx) => (\r\n                <ListItem\r\n                    key={idx}\r\n                    button\r\n                    className={!source.isEnabled ? \"disabled\" : undefined}\r\n                    selected={selectedIndex === idx}\r\n                    onClick={event => this.handleListItemClick(event, idx)} >\r\n                    <ListItemText primary={source.title} />\r\n                </ListItem>\r\n            ));\r\n        return (\r\n            <List aria-label=\"streams\">\r\n                {sourceList}\r\n            </List>\r\n        );\r\n    }\r\n\r\n    handleListItemClick(event: React.MouseEvent<HTMLDivElement, MouseEvent>, index: number) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            selectedIndex: index\r\n        });\r\n        this.props.handleSelectSource(this.props.sources[index]);\r\n    }\r\n\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SourceList from './SourceList';\r\n\r\nexport default class SourceListCard extends React.Component<SourceListCardProps, SourceListCardState> {\r\n\r\n    constructor(props: SourceListCardProps){\r\n        super(props);\r\n        this.state = {\r\n            search: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            search: e.target.value\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const { handleSelectSource, sourceList } = this.props;\r\n        const { search } = this.state;\r\n        return (\r\n            <Card className=\"card source-list\">\r\n                <CardContent>\r\n                    <Typography className=\"title\" color=\"textSecondary\" gutterBottom>\r\n                        List of the Streams\r\n                    </Typography>\r\n                    <TextField\r\n                        id=\"outlined-dense\"\r\n                        label=\"Search\"\r\n                        className=\"search\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <SourceList search={search} handleSelectSource={handleSelectSource} sources={sourceList}/>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Stream from '../../Stream/Stream';\r\n\r\nexport default class StreamPreview extends React.Component<StreamPreviewProps> {\r\n    render() {\r\n        return (\r\n            <Card className=\"card stream-preview\">\r\n                <CardContent>\r\n                    <Typography className=\"title\" color=\"textSecondary\" gutterBottom>\r\n                        Preview of the Stream\r\n                    </Typography>\r\n                    {this.props.source === null  &&\r\n                        <Typography className=\"placeholder\">\r\n                            Select a stream to view a preview of it.\r\n                        </Typography>\r\n                    }\r\n                    {this.props.source !== null &&\r\n                        <Stream source={this.props.source} />}\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './Configuration.scss';\r\nimport SourceDetails from './SourceDetails/SourceDetails';\r\nimport ConfigurationHeader from '../Headers/ConfigurationHeader';\r\nimport SourceListCard from './SourceListCard/SourceListCard';\r\nimport StreamPreview from './StreamPreview/StreamPreview';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nexport default class Configuration extends React.Component<ConfigurationProps, ConfigurationState> {\r\n\r\n    constructor(props: ConfigurationProps) {\r\n        super(props);\r\n        this.state = {\r\n            selectedSource: null\r\n        }\r\n    }\r\n\r\n    handleSelectSource = (s: Source) => {\r\n        this.setState({\r\n            selectedSource: s.key\r\n        });\r\n    }\r\n\r\n    handleUpdate = (s: Source) => {\r\n        let found = this.props.sourceRepo.streams\r\n            .findIndex(source => source.key === s.key);\r\n        if (found >= 0) {\r\n            let copy = this.props.sourceRepo.streams;\r\n            copy[found] = s;\r\n            this.props.handleSave({\r\n                ...this.props.sourceRepo,\r\n                streams: copy\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let source = this.props.sourceRepo.streams.find(s => s.key === this.state.selectedSource) || null;\r\n        return (\r\n            <ConfigurationHeader>\r\n                <Container className=\"config-titlebar\">\r\n                    <Button onClick={this.props.doneConfiguring} className=\"resume-cycle\">Resume Cycle</Button>\r\n                </Container>\r\n                <Container className=\"config-content\">\r\n                    <SourceListCard handleSelectSource={this.handleSelectSource} sourceList={this.props.sourceRepo.streams} />\r\n                    <SourceDetails handleUpdate={this.handleUpdate} source={source} />\r\n                    <StreamPreview source={source} />\r\n                </Container>\r\n            </ConfigurationHeader>\r\n        );\r\n    }\r\n\r\n}","const name = \"Missing Property Exception\";\r\n\r\nexport default class MissingPropertyException extends Error {\r\n    public missingProperty: string\r\n    constructor(missingProperty: string) {\r\n        super(`${name}: '${missingProperty}' is not defined`);\r\n        this.name = name;\r\n        this.missingProperty = missingProperty;\r\n    }\r\n}","const name = 'Duration Out of Bounds';\r\nexport default class DurationOutOfBoundsException extends Error {\r\n    public outOfRangeDuration: string;\r\n    constructor(outOfRangeDuration: string){\r\n        super(`${name}: ${outOfRangeDuration} is not a valid duration`);\r\n        this.name = name;\r\n        this.outOfRangeDuration = outOfRangeDuration;\r\n    }\r\n}","const name = 'Invalid Sort Order Exception';\r\nexport default class InvalidSortOrderException extends Error {\r\n    public invalidSortOrder: string;\r\n    constructor(invalidSortOrder: string){\r\n        super(`${name}: ${invalidSortOrder} is not a valid sort order`);\r\n        this.invalidSortOrder = invalidSortOrder;\r\n        this.name = name;\r\n    }\r\n}","import MissingPropertyException from \"../Exceptions/MissingPropertyException\";\r\nimport DurationOutOfBoundsException from \"../Exceptions/DurationOutOfBounds\";\r\nimport InvalidSortOrderException from \"../Exceptions/InvalidSortOrderException\";\r\n\r\nexport default class SourceValidation {\r\n\r\n    public static validate(source: Source): void {\r\n        let validation = new SourceValidation();\r\n        validation.validateState(source);\r\n    }\r\n\r\n    private constraints: ((s: Source) => void)[];\r\n\r\n    constructor() {\r\n        this.constraints = [\r\n            this.propertyValidation,\r\n            this.durationValidation,\r\n            this.sortOrderValidation\r\n        ];\r\n    }\r\n\r\n    private validateState(sourceRepositoryState: Source): void {\r\n        this.constraints.forEach(c => c(sourceRepositoryState))\r\n    }\r\n\r\n    private propertyValidation = (s: Source): void => {\r\n        let keys: (keyof Source)[] = [\"duration\", \"isEnabled\",\r\n            \"sortOrder\", \"source\", \"title\", \"key\"];\r\n        keys.forEach(k => {\r\n            if (s[k] === undefined)\r\n                throw new MissingPropertyException(k);\r\n        });\r\n    }\r\n\r\n    private durationValidation = (s: Source): void => {\r\n        if (s.duration <= 0)\r\n            throw new DurationOutOfBoundsException(s.duration.toString());\r\n    }\r\n\r\n    private sortOrderValidation = (s: Source): void => {\r\n        if (s.sortOrder < 0)\r\n            throw new InvalidSortOrderException(s.sortOrder.toString());\r\n    }\r\n}\r\n","import SourceValidation from \"./Source\";\r\nimport MissingPropertyException from \"../Exceptions/MissingPropertyException\";\r\n\r\nexport default class SourceRepositoryValidation {\r\n\r\n    public static validate(sourceRepositoryState: SourceRepository): void {\r\n        let validation = new SourceRepositoryValidation();\r\n        validation.validateState(sourceRepositoryState);\r\n    }\r\n\r\n    private constraints: ((s: SourceRepository) => void)[];\r\n\r\n    constructor() {\r\n        this.constraints = [\r\n            this.propertyValidation,\r\n            this.streamValidation\r\n        ];\r\n    }\r\n\r\n    private validateState(sourceRepositoryState: SourceRepository): void {\r\n        this.constraints.forEach(c => c(sourceRepositoryState));\r\n    }\r\n\r\n    private propertyValidation = (s: SourceRepository): void => {\r\n        if (!s.streams)\r\n            throw new MissingPropertyException('streams');\r\n        \r\n    }\r\n\r\n    private streamValidation = (s: SourceRepository): void => {\r\n        s.streams.forEach(stream => SourceValidation.validate(stream));\r\n    }\r\n}","import SourceList from '../source-list.json';\r\nimport SourceRepositoryValidation from \"../SchemaValidators/SourceRepository\";\r\n\r\nconst SourceRepoKey = \"StreamRepoKey_v1\";\r\n\r\nexport default class SourceRepo {\r\n\r\n    public static load(): SourceRepository {\r\n        let repoString = localStorage.getItem(SourceRepoKey);\r\n        if (!repoString)\r\n            return this.emptyRepo();\r\n        return JSON.parse(repoString) as SourceRepository;\r\n    }\r\n\r\n    public static save(sourceRepository: SourceRepository) {\r\n        try {\r\n            SourceRepositoryValidation.validate(sourceRepository)\r\n            let repoString = JSON.stringify(sourceRepository);\r\n            localStorage.setItem(SourceRepoKey, repoString);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    public static emptyRepo(): SourceRepository {\r\n        return {\r\n            streams: SourceList\r\n        }\r\n    }\r\n\r\n}","import React from 'react';\r\nimport Loader from '../Loader/Loader';\r\nimport Cycler from '../Cycler/Cycler';\r\nimport Configuration from '../Configuration/Configuration';\r\nimport SourceRepo from '../../LocalStorage/SourceRepo';\r\n\r\nexport default class Kaleidoscope extends React.Component<KaleidoscopeProps, KaleidoscopeState>{\r\n\r\n    constructor(props: KaleidoscopeProps) {\r\n        super(props);\r\n        this.state = {\r\n            isConfiguring: false,\r\n            sourceRepository: {\r\n                streams: []\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            sourceRepository: SourceRepo.load()\r\n        });\r\n    }\r\n\r\n    openConfiguration = (event: ButtonClickEvent): void => {\r\n        this.setState({\r\n            isConfiguring: true\r\n        });\r\n    }\r\n\r\n    handleSave = (updatedSourceRepo: SourceRepository) => {\r\n        SourceRepo.save(updatedSourceRepo);\r\n        this.setState({\r\n            sourceRepository: updatedSourceRepo\r\n        });\r\n    }\r\n\r\n    doneConfiguringCallback = () => {\r\n        this.setState({\r\n            isConfiguring: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { isConfiguring, sourceRepository } = this.state;\r\n        let sources = sourceRepository.streams.filter(s => s.isEnabled);\r\n        sources.sort((a, b) => a.sortOrder - b.sortOrder);\r\n        return (\r\n            <React.Fragment>\r\n                {isConfiguring && <Configuration doneConfiguring={this.doneConfiguringCallback} sourceRepo={sourceRepository} handleSave={this.handleSave} />}\r\n                {!isConfiguring &&\r\n                    <Loader loadTime={this.props.loadTime} handleConfigureClick={this.openConfiguration}>\r\n                        <Cycler openMenuCallback={this.openConfiguration} sourceList={sources} />\r\n                    </Loader>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './App.scss';\r\nimport { LOAD_TIME } from '../../Constants/environment.constants';\r\nimport Kaleidoscope from '../Kaleidoscope/Kaleidoscope';\r\n\r\nconst App: React.FC = () => {\r\n  let reference = React.createRef() as React.RefObject<HTMLDivElement>;\r\n  return (\r\n    <div className=\"App\" ref={reference} onClick={() => goFullScreen(reference)}>\r\n      <Kaleidoscope loadTime={LOAD_TIME} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst goFullScreen = (reference: React.RefObject<HTMLDivElement>): void => {\r\n  if (reference.current)\r\n    reference.current.requestFullscreen();\r\n}\r\n\r\nexport default App;\r\n","const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        checkValidServiceWorker(swUrl, config);\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './Components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.register();"],"sourceRoot":""}