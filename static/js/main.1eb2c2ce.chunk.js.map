{"version":3,"sources":["Assets/logos/kaleidoscope-2.svg","enumerations.ts","Constants/environment.constants.ts","Components/Headers/AppHeader.tsx","Components/LoadScreen/LoadScreen.tsx","Components/Configuration/ConfigureButton.tsx","Components/Loader/Loader.tsx","Components/Stream/Stream.tsx","Components/TimeDisplay/TimeDisplay.tsx","Components/Cycler/CyclerControl/CyclerControl.tsx","Components/Curtain/Curtain.tsx","Components/Cycler/Cycler.tsx","Components/Workarounds/Shocker.ts","Components/Configuration/SourceDetails/SourceTitle/SourceTitle.tsx","Components/Configuration/SourceDetails/SourceURL/SourceURL.tsx","Components/Configuration/SourceDetails/SourceDuration/SourceDuration.tsx","Components/Configuration/SourceDetails/SourceDetails.tsx","Components/Headers/ConfigurationHeader.tsx","Components/Configuration/SourceListCard/SourceList.tsx","Components/Configuration/SourceControlList/SourceControlRow.tsx","Components/Configuration/SourceListCard/SourceListCard.tsx","Components/Configuration/StreamPreview/StreamPreview.tsx","Components/Mutators/SourceRepositoryMutator.ts","Components/Configuration/Configuration.tsx","Exceptions/MissingPropertyException.ts","Exceptions/DurationOutOfBounds.ts","Exceptions/InvalidSortOrderException.ts","SchemaValidators/Source.ts","SchemaValidators/SourceRepository.ts","LocalStorage/SourceRepo.ts","Components/Kaleidoscope/Kaleidoscope.tsx","Components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","PlayBackMode","LOAD_TIME","parseInt","process","AppHeader","props","react_default","a","createElement","className","children","LoadScreen","Headers_AppHeader","src","logo","alt","ConfigureButton","buttonClickHandler","this","Button","color","onClick","React","Component","Loader","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","finishedLoading","setState","doneLoading","state","setTimeout","loadTime","handleConfigureClick","Components_LoadScreen_LoadScreen","ConfigureButton_ConfigureButton","Stream","_this$props$source","source","title","id","allow","noOpMessage","TimeDisplay","_this$props","time","secondsRemaining","calcSeconds","minutesRemaining","calcMinutes","concat","milSecondsRemaining","format","Math","floor","numberToFormat","str","substring","length","CyclerControl","onSkip","onPlayBack","onMenuOpen","playBackMode","IconButton","aria-label","SvgIcon","xmlns","width","height","viewBox","d","Play","Pause","Curtain","open","Slide","direction","in","Cycler","increment","tick","sourceList","activeSource","playbackPaused","runTick","timeRemainingInCycle","cycle","nextSourceIndex","cycleIndex","millisecondsRemaining","duration","event","controlsVisible","timeClicked","updateClock","nextRemainingCycle","getSource","_this2","_this$state","playbackMode","Fragment","Components_Stream_Stream","Components_TimeDisplay_TimeDisplay","Components_Curtain_Curtain","Cycler_CyclerControl_CyclerControl","openMenuCallback","Workarounds_Shocker","shock","value","property","defineProperty","configProps","name","label","type","SourceTitle","_ref","handleChange","TextField","assign","onChange","Shocker","shocker","helperText","SourceURL","url","SourceDuration","Input","endAdornment","SourceDetails","handleToggle","checked","target","handleErrors","handleUpdate","objectSpread","_event$target","optionalErrorState","error","ex","transformUp","ratio","toString","prevProps","key","Card","CardContent","Typography","gutterBottom","FormGroup","SourceDetails_SourceTitle_SourceTitle","SourceDetails_SourceURL_SourceURL","Grid","InputLabel","SourceDetails_SourceDuration_SourceDuration","Switch","isEnabled","ConfigurationHeader","SourceList","search","selectedIndex","sources","filter","includes","sort","b","sortOrder","map","idx","ListItem","button","undefined","selected","handleListItemClick","ListItemText","primary","List","index","preventDefault","handleSelectSource","SourceControlRow","Container","addSource","sortUp","disabled","sortDisable","sortDown","deleteSource","SourceListCard","e","margin","variant","SourceList_SourceList","SourceControlList_SourceControlRow","sortDisabled","StreamPreview","Mutators_SourceRepositoryMutator","sourceRepo","copy","streams","s","shift","adjustment","find","newOrder","precedingSource","updates","push","updateMany","found","findIndex","i","update","Configuration","selectedSource","handleSave","SourceRepositoryMutator","add","deleteSelectedSource","delete","sortUpDisabled","sortDownDisabled","Headers_ConfigurationHeader","doneConfiguring","SourceListCard_SourceListCard","s1","s2","SourceDetails_SourceDetails","StreamPreview_StreamPreview","MissingPropertyException","missingProperty","Error","DurationOutOfBoundsException","outOfRangeDuration","InvalidSortOrderException","invalidSortOrder","SourceValidation","constraints","propertyValidation","forEach","k","durationValidation","sortOrderValidation","validateState","sourceRepositoryState","c","SourceRepositoryValidation","streamValidation","stream","validate","SourceRepo","repoString","localStorage","getItem","JSON","parse","emptyRepo","sourceRepository","stringify","setItem","console","log","Kaleidoscope","openConfiguration","isConfiguring","updatedSourceRepo","save","doneConfiguringCallback","load","Configuration_Configuration_Configuration","Components_Loader_Loader","Components_Cycler_Cycler","goFullScreen","reference","current","requestFullscreen","App","createRef","ref","Kaleidoscope_Kaleidoscope","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","Components_App_App","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1eb2c2ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kaleidoscope-2.69382820.svg\";","export enum PlayBackMode {\r\n    Pause = \"Pause\",\r\n    Play = \"Play\"\r\n}","const TEN_MINUTES = \"600000\";\r\nconst FIVE_SECONDS = \"5000\";\r\nconst APP_CACHE_V1_KEY = \"APP_CACHE_V1_KEY \";\r\nconst LOAD_TIME = parseInt(process.env.REACT_APP_LOAD_TIME || FIVE_SECONDS);\r\nexport {\r\n    APP_CACHE_V1_KEY,\r\n    FIVE_SECONDS,\r\n    LOAD_TIME,\r\n    TEN_MINUTES,\r\n}","import React from 'react';\r\n\r\nconst AppHeader: React.FunctionComponent = props => (\r\n    <header className=\"App-header\">\r\n        {props.children}\r\n    </header>\r\n);\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport logo from '../../Assets/logos/kaleidoscope-2.svg';\r\nimport AppHeader from '../Headers/AppHeader';\r\n\r\nconst LoadScreen: React.FC = props =>\r\n    <AppHeader>\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>Starting Up The Streams...</p>\r\n        {props.children}\r\n    </AppHeader>\r\n\r\nexport default LoadScreen;","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\n\r\nexport default class ConfigureButton extends React.Component<ConfigureButtonProps> {\r\n    render(){\r\n        const { buttonClickHandler } = this.props;\r\n        return <Button color=\"primary\" className=\"configure-button\" onClick={buttonClickHandler}>Configure Streams</Button>\r\n    }\r\n}","import React from 'react';\r\nimport LoadScreen from '../LoadScreen/LoadScreen';\r\nimport ConfigureButton from '../Configuration/ConfigureButton';\r\n\r\nclass Loader extends React.Component<LoaderProps, LoaderState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            doneLoading: false\r\n        }\r\n        setTimeout(this.finishedLoading, this.props.loadTime);\r\n    }\r\n\r\n    finishedLoading = () => {\r\n        this.setState({\r\n            doneLoading: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { doneLoading } = this.state;\r\n        const { handleConfigureClick } = this.props;\r\n        if (doneLoading)\r\n            return this.props.children;\r\n        else\r\n            return (\r\n                <LoadScreen>\r\n                    <ConfigureButton buttonClickHandler={handleConfigureClick} />\r\n                </LoadScreen>\r\n            );\r\n    }\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport './Stream.scss';\r\n\r\nclass Stream extends React.Component<StreamProps> {\r\n\r\n    noOpMessage(){\r\n        return \"Your browser doesn't support iFrames.\";\r\n    }\r\n\r\n    render(){\r\n        const { source, title } = this.props.source;\r\n        return (\r\n            <iframe title={title} id=\"player\" allow={\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"} src={source}>{this.noOpMessage()}</iframe>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Stream;","import React from 'react';\r\nimport './TimeDisplay.scss';\r\nimport { Button } from '@material-ui/core';\r\n\r\nclass TimeDisplay extends React.Component<TimeDisplayProps>{\r\n\r\n    render(){\r\n        const { time, onClick } = this.props;\r\n        const secondsRemaining = this.calcSeconds(time);\r\n        const minutesRemaining = this.calcMinutes(time);\r\n        return (\r\n            <Button onClick={onClick} color={\"inherit\"} className=\"time-display\">\r\n                <div className=\"time-box\">{`${minutesRemaining}:${secondsRemaining}`}</div>\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    private calcMinutes(milSecondsRemaining: number) {\r\n        return this.format(Math.floor(milSecondsRemaining / 60000));\r\n    }\r\n\r\n    private calcSeconds(milSecondsRemaining: number) {\r\n        return this.format(Math.floor((milSecondsRemaining % 60000) / 1000));\r\n    }\r\n\r\n    private format(numberToFormat: number): string {\r\n        var str = \"\" + numberToFormat;\r\n        var pad = \"00\";\r\n        return pad.substring(0, pad.length - str.length) + str;\r\n    }\r\n}\r\n\r\nexport default TimeDisplay;","import React from 'react';\r\nimport './CyclerControl.scss';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport { PlayBackMode } from '../../../enumerations';\r\n\r\nclass CyclerControl extends React.Component<CyclerControlProps, CyclerControlState> {\r\n\r\n    render() {\r\n        const { onSkip, onPlayBack, onMenuOpen, playBackMode } = this.props;\r\n        return (\r\n            <div className='cycler-controls'>\r\n                <IconButton id=\"skip-control\" onClick={onSkip} aria-label=\"skip\">\r\n                    <SvgIcon xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\r\n                        <path d=\"M12 36l17-12-17-12v24zm20-24v24h4V12h-4z\" />\r\n                    </SvgIcon>\r\n                </IconButton>\r\n                <IconButton id=\"playback-control\" onClick={onPlayBack} aria-label={playBackMode}>\r\n                    {playBackMode === PlayBackMode.Play &&\r\n                        <SvgIcon xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                            <path d=\"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\r\n                        </SvgIcon>}\r\n                    {playBackMode === PlayBackMode.Pause &&\r\n                        <SvgIcon xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\r\n                            <path d=\"M18 32h4V16h-4v16zm6-28C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16zm2-8h4V16h-4v16z\" />\r\n                        </SvgIcon>}\r\n                </IconButton>\r\n                <IconButton id=\"menu-control\" onClick={onMenuOpen} aria-label=\"open menu\">\r\n                    <SvgIcon xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\r\n                        <path d=\"M28,0C12.561,0,0,12.561,0,28s12.561,28,28,28s28-12.561,28-28S43.439,0,28,0z M28,54C13.663,54,2,42.336,2,28\r\n                            S13.663,2,28,2s26,11.664,26,26S42.337,54,28,54z\"/>\r\n                        <path d=\"M40,16H16c-0.553,0-1,0.448-1,1s0.447,1,1,1h24c0.553,0,1-0.448,1-1S40.553,16,40,16z\"/>\r\n                        <path d=\"M40,27H16c-0.553,0-1,0.448-1,1s0.447,1,1,1h24c0.553,0,1-0.448,1-1S40.553,27,40,27z\"/>\r\n                        <path d=\"M40,38H16c-0.553,0-1,0.448-1,1s0.447,1,1,1h24c0.553,0,1-0.448,1-1S40.553,38,40,38z\"/>\r\n                    </SvgIcon>\r\n                </IconButton>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default CyclerControl;","import React from 'react';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nclass Curtain extends React.Component<CurtainProps, CurtainState> {\r\n    render() {\r\n        const { open } = this.props;\r\n        return (\r\n            <Slide direction={'down'} in={open}>\r\n                <div id=\"cycler-controls\">\r\n                    {this.props.children}\r\n                </div>\r\n            </Slide>);\r\n    }\r\n}\r\n\r\nexport default Curtain;","import React from 'react';\r\nimport Stream from '../Stream/Stream';\r\nimport TimeDisplay from '../TimeDisplay/TimeDisplay';\r\nimport CyclerControl from './CyclerControl/CyclerControl';\r\nimport Curtain from '../Curtain/Curtain';\r\nimport { PlayBackMode } from '../../enumerations';\r\n\r\nclass Cycler extends React.Component<CyclerProps, CyclerState> {\r\n    \r\n    private readonly increment = 50;\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            activeSource: 0,\r\n            millisecondsRemaining: this.props.sourceList[0].duration,\r\n            controlsVisible: false,\r\n            playbackPaused: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { activeSource } = this.state;\r\n        const { sourceList } = this.props;\r\n        setTimeout(() => this.tick(sourceList, activeSource), this.increment);\r\n    }\r\n    \r\n    render() {\r\n        const { activeSource, millisecondsRemaining,\r\n            controlsVisible, playbackPaused } = this.state;\r\n        let playbackMode = playbackPaused ? PlayBackMode.Play : PlayBackMode.Pause;\r\n        return (\r\n            <>\r\n                <Stream source={this.getSource(activeSource)} />\r\n                <TimeDisplay onClick={this.timeClicked} \r\n                    time={millisecondsRemaining} />\r\n                <Curtain open={controlsVisible}>\r\n                    <CyclerControl onSkip={this.onSkip}\r\n                        playBackMode={playbackMode}\r\n                        onPlayBack={this.onPlayBack}\r\n                        onMenuOpen={this.props.openMenuCallback} />\r\n                </Curtain>\r\n            </>\r\n        );\r\n    }\r\n    \r\n    tick = (sourceList: Source[], activeSource: number) => {\r\n        if (!this.state.playbackPaused)\r\n            this.runTick(this.timeRemainingInCycle());\r\n        setTimeout(() => this.tick(sourceList, activeSource), this.increment);\r\n    }\r\n    \r\n    cycle = () => {\r\n        const { activeSource } = this.state;\r\n        const { sourceList } = this.props;\r\n        let nextSourceIndex = this.cycleIndex(activeSource, sourceList.length);\r\n        this.setState({\r\n           activeSource: nextSourceIndex,\r\n           millisecondsRemaining: this.props.sourceList[nextSourceIndex].duration\r\n        });\r\n    }\r\n\r\n\r\n    onSkip = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        this.cycle();\r\n        this.setState({ controlsVisible: false});\r\n    }\r\n    \r\n    onPlayBack = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        this.setState({ playbackPaused: !this.state.playbackPaused});\r\n        this.setState({ controlsVisible: false});\r\n    }\r\n\r\n    timeClicked = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        this.setState({ controlsVisible: !this.state.controlsVisible });\r\n    }\r\n\r\n    private updateClock = (nextRemainingCycle: number) => {\r\n        this.setState({\r\n            millisecondsRemaining: nextRemainingCycle\r\n        });\r\n    }\r\n\r\n    private runTick(nextRemainingCycle: number) {\r\n        if (nextRemainingCycle > this.increment)\r\n            this.updateClock(nextRemainingCycle);\r\n        else\r\n            this.cycle();\r\n    }\r\n\r\n    private timeRemainingInCycle() {\r\n        const { millisecondsRemaining } = this.state;\r\n        let nextRemainingCycle = millisecondsRemaining - this.increment;\r\n        return nextRemainingCycle;\r\n    }\r\n\r\n    private cycleIndex(activeSource: number, length: number) {\r\n        activeSource++;\r\n        if (activeSource === length) {\r\n            activeSource = 0;\r\n        }\r\n        return activeSource;\r\n    }\r\n\r\n    private getSource = (activeSource: number) => {\r\n        return this.props.sourceList[activeSource];\r\n    }\r\n}\r\n\r\nexport default Cycler;","class Shocker {\r\n    shocker(shock: boolean, value: any) {\r\n        let property = shock ? 'value' : 'defaultValue'\r\n        return {\r\n            [property]: value\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default new Shocker();\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Shocker from '../../../Workarounds/Shocker';\r\n\r\nconst configProps = {\r\n    name: 'title',\r\n    label: \"Source Name\",\r\n    type: \"text\"\r\n}\r\n\r\nconst SourceTitle: React.FunctionComponent<SourceTitleProps> = ({ handleChange, shock, title }: SourceTitleProps) => (\r\n    <TextField {...configProps} onChange={handleChange} {...Shocker.shocker(shock, title)} />\r\n);\r\n\r\nexport default SourceTitle;\r\n\r\n","\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Shocker from '../../../Workarounds/Shocker';\r\n\r\nconst configProps = {\r\n    name: 'source',\r\n    className: \"beefy\",\r\n    label: \"URL\",\r\n    type: \"url\",\r\n    helperText: \"Must be embeddable\"\r\n}\r\n\r\nconst SourceURL: React.FunctionComponent<SourceURLProps> = ({ handleChange, shock, url }: SourceURLProps) => (\r\n    <TextField {...configProps} onChange={handleChange} {...Shocker.shocker(shock, url)} />\r\n);\r\n\r\nexport default SourceURL;","import React from 'react';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nconst configProps = {\r\n    id: \"duration\",\r\n    name: \"duration\",\r\n    type: \"number\" \r\n}\r\n\r\nconst SourceDuration: React.FunctionComponent<SourceDurationProps> = ({ duration, handleChange }) => (\r\n    <Input {...configProps} onChange={handleChange} endAdornment={'Seconds'} value={duration} />\r\n)\r\n\r\nexport default SourceDuration;","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SourceTitle from './SourceTitle/SourceTitle';\r\nimport SourceURL from './SourceURL/SourceURL';\r\nimport SourceDuration from './SourceDuration/SourceDuration';\r\n\r\nexport default class SourceDetails extends React.Component<SourceDetailsProps, SourceDetailsState> {\r\n\r\n    constructor(props: SourceDetailsProps) {\r\n        super(props);\r\n        this.state = {\r\n            error: '',\r\n            shock: false\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps: SourceDetailsProps){\r\n        if(this.state.shock)\r\n            this.setState({\r\n                shock: false\r\n            });\r\n        if(this.props.source !== null \r\n            && prevProps.source !== null\r\n            && this.props.source.key !== prevProps.source.key)\r\n                this.setState({\r\n                    shock: true\r\n                });\r\n\r\n    }\r\n    \r\n    handleToggle = (name: string) => (event: any) => {\r\n        const { checked } = event.target;\r\n        this.handleErrors(() =>\r\n            this.props.handleUpdate({\r\n                ...this.props.source!,\r\n                [name]: !checked\r\n            }), name);\r\n    }\r\n\r\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = event.target;\r\n        this.handleErrors(() =>\r\n            this.props.handleUpdate({\r\n                ...this.props.source!,\r\n                [name]: value\r\n            }), name);\r\n    }\r\n\r\n    handleErrors = (call: () => void, optionalErrorState?: string) => {\r\n        try {\r\n            this.setState({ error: '' }, call);\r\n        } catch (ex) {\r\n            this.setState({\r\n                error: optionalErrorState ? optionalErrorState : ex\r\n            });\r\n        }\r\n    }\r\n    \r\n    transformUp = (ratio: number) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        event.target.value = (parseInt(event.target.value) * ratio).toString();\r\n        this.handleChange(event);\r\n    }\r\n\r\n    render() {\r\n        const { error, shock } = this.state;\r\n        const conversionRatio = 1000;\r\n        return (\r\n            <Card className=\"card source-detail\">\r\n                <CardContent>\r\n                    <Typography className=\"title\" color=\"textSecondary\" gutterBottom>\r\n                        Stream Details\r\n                    </Typography>\r\n                    {this.props.source === null &&\r\n                        <Typography className=\"placeholder\">\r\n                            Select a stream to view it's details.\r\n                        </Typography>}\r\n                    {this.props.source !== null && (\r\n                        <FormGroup>\r\n                            <SourceTitle \r\n                                handleChange={this.handleChange} \r\n                                title={this.props.source.title} \r\n                                shock={shock} />\r\n                            <SourceURL \r\n                                handleChange={this.handleChange} \r\n                                url={this.props.source.source} \r\n                                shock={shock} />\r\n                            <Grid>\r\n                                <InputLabel id=\"durationLabel\" error={error === 'duration'} className=\"inline-lb\">Duration</InputLabel>\r\n                                <SourceDuration \r\n                                    handleChange={this.transformUp(conversionRatio)}\r\n                                    duration={this.props.source.duration / conversionRatio} />\r\n                            </Grid>\r\n                            <Grid>\r\n                                <InputLabel className=\"inline-lb\">Enabled</InputLabel>\r\n                                <Switch id=\"enable-toggle\" name='isEnabled' onClick={this.handleToggle('isEnabled')}\r\n                                    type=\"button\" checked={this.props.source.isEnabled} />\r\n                            </Grid>\r\n                        </FormGroup>\r\n                    )}\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ConfigurationHeader: React.FunctionComponent = props => (\r\n    <header className=\"config-viewport\">\r\n        <div className=\"config-container\">\r\n            {props.children}\r\n        </div>\r\n    </header>\r\n);\r\n\r\nexport default ConfigurationHeader;","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nexport default class SourceList extends React.Component<SourceListProps, SourceListState> {\r\n\r\n    render() {\r\n        const { search, selectedIndex } = this.props;\r\n        const sourceList = this.props.sources\r\n            .filter(source => search \r\n                ? source.title.includes(search) \r\n                || source.source.includes(search) : true)\r\n            .sort((a, b) => a.sortOrder - b.sortOrder)\r\n            .map((source, idx) => (\r\n                <ListItem\r\n                    key={idx}\r\n                    button\r\n                    className={!source.isEnabled ? \"disabled\" : undefined}\r\n                    selected={selectedIndex === source.key}\r\n                    onClick={event => this.handleListItemClick(event, idx)} >\r\n                    <ListItemText primary={source.title} />\r\n                </ListItem>\r\n            ));\r\n        return (\r\n            <List aria-label=\"streams\">\r\n                {sourceList}\r\n            </List>\r\n        );\r\n    }\r\n\r\n    handleListItemClick(event: React.MouseEvent<HTMLDivElement, MouseEvent>, index: number) {\r\n        event.preventDefault();\r\n        this.props.handleSelectSource(this.props.sources[index]);\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { Button, Container } from '@material-ui/core';\r\n\r\nclass SourceControlRow extends React.Component<SourceControlRowProps> {\r\n    render(){\r\n        return (\r\n            <Container className='source-control'>\r\n               <Button color=\"primary\" onClick={this.props.addSource}>Add</Button>\r\n               <Button onClick={this.props.sortUp} disabled={this.props.sortDisable[0]}>Move Up</Button>\r\n               <Button onClick={this.props.sortDown} disabled={this.props.sortDisable[1]}>Move Down</Button>\r\n               <Button color=\"secondary\" onClick={this.props.deleteSource}>Delete</Button>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SourceControlRow;","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SourceList from './SourceList';\r\nimport SourceControlRow from '../SourceControlList/SourceControlRow';\r\n\r\nexport default class SourceListCard extends React.Component<SourceListCardProps, SourceListCardState> {\r\n\r\n    constructor(props: SourceListCardProps){\r\n        super(props);\r\n        this.state = {\r\n            search: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            search: e.target.value\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const { handleSelectSource, addSource, deleteSource, sourceList, selectedIndex } = this.props;\r\n        const { search } = this.state;\r\n        return (\r\n            <Card className=\"card source-list\">\r\n                <CardContent>\r\n                    <Typography className=\"title\" color=\"textSecondary\" gutterBottom>\r\n                        List of the Streams\r\n                    </Typography>\r\n                    <TextField\r\n                        id=\"outlined-dense\"\r\n                        label=\"Search\"\r\n                        className=\"search\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <SourceList \r\n                        selectedIndex={selectedIndex}\r\n                        search={search} \r\n                        handleSelectSource={handleSelectSource} \r\n                        sources={sourceList}/>\r\n                    <SourceControlRow \r\n                        sortUp={this.props.sortUp}\r\n                        sortDown={this.props.sortDown}\r\n                        sortDisable={this.props.sortDisabled}\r\n                        addSource={addSource} \r\n                        deleteSource={deleteSource} />\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Stream from '../../Stream/Stream';\r\n\r\nexport default class StreamPreview extends React.Component<StreamPreviewProps> {\r\n    render() {\r\n        return (\r\n            <Card className=\"card stream-preview\">\r\n                <CardContent>\r\n                    <Typography className=\"title\" color=\"textSecondary\" gutterBottom>\r\n                        Preview of the Stream\r\n                    </Typography>\r\n                    {this.props.source === null  &&\r\n                        <Typography className=\"placeholder\">\r\n                            Select a stream to view a preview of it.\r\n                        </Typography>\r\n                    }\r\n                    {this.props.source !== null &&\r\n                        <Stream source={this.props.source} />}\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n}","class SourceRepositoryMutator {\r\n\r\n    add(sourceRepo: SourceRepository): SourceRepository {\r\n        let copy = sourceRepo.streams;\r\n        return {\r\n            ...sourceRepo,\r\n            streams: copy.concat([{\r\n                duration: 60,\r\n                isEnabled: false,\r\n                key: copy[copy.length - 1].key + 1,\r\n                sortOrder: copy[copy.length - 1].sortOrder + 1,\r\n                source: \"\",\r\n                title: \"New Stream\"\r\n            }])\r\n        }\r\n    }\r\n\r\n    delete(sourceRepo: SourceRepository, key: number | null): SourceRepository{\r\n        return {\r\n            ...sourceRepo,\r\n            streams: sourceRepo.streams\r\n                .filter(s => s.key !== key) \r\n        }\r\n    }\r\n    \r\n    sortDown(sourceRepo: SourceRepository, key: number | null): SourceRepository {\r\n        return this.shift(sourceRepo, key, 1);\r\n    }\r\n\r\n    sortUp(sourceRepo: SourceRepository, key: number | null): SourceRepository {\r\n        return this.shift(sourceRepo, key, -1);\r\n    }\r\n\r\n    shift(sourceRepo: SourceRepository, key: number | null, adjustment: number){\r\n        let s = sourceRepo.streams.find(s => s.key === key);\r\n        if (s) {\r\n            const newOrder = s.sortOrder + adjustment;\r\n            let precedingSource = sourceRepo.streams.find(src => src.sortOrder === newOrder);\r\n            s.sortOrder = newOrder;\r\n            let updates = [s];\r\n            if (precedingSource) {\r\n                precedingSource.sortOrder += -1 * adjustment;\r\n                updates.push(precedingSource);\r\n            }\r\n            return this.updateMany(sourceRepo, updates);\r\n        }\r\n        return sourceRepo;\r\n    }\r\n\r\n    update(sourceRepo: SourceRepository, s: Source): SourceRepository{\r\n        let found = sourceRepo.streams\r\n            .findIndex(source => source.key === s.key);\r\n        if (found >= 0) {\r\n            let copy = sourceRepo.streams;\r\n            copy[found] = s;\r\n            return {\r\n                ...sourceRepo,\r\n                streams: copy\r\n            }\r\n        }\r\n        return sourceRepo;\r\n    }\r\n    \r\n    updateMany(sourceRepo: SourceRepository, s: Source[]): SourceRepository{\r\n        for (let i = 0; i < s.length; i++) {\r\n            sourceRepo = this.update(sourceRepo, s[i]);\r\n        }\r\n        return sourceRepo;\r\n    }\r\n}\r\n\r\nexport default new SourceRepositoryMutator();","import React from 'react';\r\nimport './Configuration.scss';\r\nimport SourceDetails from './SourceDetails/SourceDetails';\r\nimport ConfigurationHeader from '../Headers/ConfigurationHeader';\r\nimport SourceListCard from './SourceListCard/SourceListCard';\r\nimport StreamPreview from './StreamPreview/StreamPreview';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport SourceRepositoryMutator from '../Mutators/SourceRepositoryMutator';\r\n\r\nexport default class Configuration extends React.Component<ConfigurationProps, ConfigurationState> {\r\n\r\n    constructor(props: ConfigurationProps) {\r\n        super(props);\r\n        this.state = {\r\n            selectedSource: null\r\n        }\r\n    }\r\n\r\n    handleSelectSource = (s: Source) => {\r\n        this.setState({\r\n            selectedSource: s.key\r\n        });\r\n    }\r\n    \r\n    sortDown = () => {\r\n        this.props.handleSave(\r\n            SourceRepositoryMutator.sortDown(this.props.sourceRepo, this.state.selectedSource)\r\n        )\r\n    }\r\n\r\n    sortUp = () => {\r\n        this.props.handleSave(\r\n            SourceRepositoryMutator.sortUp(this.props.sourceRepo, this.state.selectedSource)\r\n        )\r\n    }\r\n\r\n    addSource = () => {\r\n        let s;\r\n        this.props.handleSave(\r\n            (s = SourceRepositoryMutator.add(this.props.sourceRepo))\r\n        );\r\n        this.setState({ selectedSource: s.streams[s.streams.length - 1].key });\r\n    }\r\n\r\n    deleteSelectedSource = () => {\r\n        this.props.handleSave(\r\n            SourceRepositoryMutator.delete(this.props.sourceRepo, this.state.selectedSource)\r\n        );\r\n        this.setState({ selectedSource: null });\r\n    }\r\n\r\n    handleUpdate = (s: Source) =>\r\n        this.props.handleSave(\r\n            SourceRepositoryMutator.update(this.props.sourceRepo, s)\r\n        );\r\n\r\n    render() {\r\n        let source = this.props.sourceRepo.streams.find(s => s.key === this.state.selectedSource) || null;\r\n        const sortUpDisabled = source === null ? true : !this.props.sourceRepo.streams.find(s => s.sortOrder < source!.sortOrder);\r\n        const sortDownDisabled = source === null ? true : !this.props.sourceRepo.streams.find(s => s.sortOrder > source!.sortOrder);\r\n        const selectedIndex = this.state.selectedSource;\r\n        return (\r\n            <ConfigurationHeader>\r\n                <Container className=\"config-titlebar\">\r\n                    <Button onClick={this.props.doneConfiguring} className=\"resume-cycle\">Resume Cycle</Button>\r\n                </Container>\r\n                <Container className=\"config-content\">\r\n                    <SourceListCard\r\n                        selectedIndex={selectedIndex}\r\n                        handleSelectSource={this.handleSelectSource}\r\n                        sortUp={this.sortUp}\r\n                        sortDown={this.sortDown}\r\n                        sortDisabled={[sortUpDisabled, sortDownDisabled]}\r\n                        addSource={this.addSource}\r\n                        deleteSource={this.deleteSelectedSource}\r\n                        sourceList={this.props.sourceRepo.streams.sort((s1, s2) => s1.sortOrder - s2.sortOrder)} />\r\n                    <SourceDetails handleUpdate={this.handleUpdate} source={source} />\r\n                    <StreamPreview source={source} />\r\n                </Container>\r\n            </ConfigurationHeader>\r\n        );\r\n    }\r\n\r\n}","const name = \"Missing Property Exception\";\r\n\r\nexport default class MissingPropertyException extends Error {\r\n    public missingProperty: string\r\n    constructor(missingProperty: string) {\r\n        super(`${name}: '${missingProperty}' is not defined`);\r\n        this.name = name;\r\n        this.missingProperty = missingProperty;\r\n    }\r\n}","const name = 'Duration Out of Bounds';\r\nexport default class DurationOutOfBoundsException extends Error {\r\n    public outOfRangeDuration: string;\r\n    constructor(outOfRangeDuration: string){\r\n        super(`${name}: ${outOfRangeDuration} is not a valid duration`);\r\n        this.name = name;\r\n        this.outOfRangeDuration = outOfRangeDuration;\r\n    }\r\n}","const name = 'Invalid Sort Order Exception';\r\nexport default class InvalidSortOrderException extends Error {\r\n    public invalidSortOrder: string;\r\n    constructor(invalidSortOrder: string){\r\n        super(`${name}: ${invalidSortOrder} is not a valid sort order`);\r\n        this.invalidSortOrder = invalidSortOrder;\r\n        this.name = name;\r\n    }\r\n}","import MissingPropertyException from \"../Exceptions/MissingPropertyException\";\r\nimport DurationOutOfBoundsException from \"../Exceptions/DurationOutOfBounds\";\r\nimport InvalidSortOrderException from \"../Exceptions/InvalidSortOrderException\";\r\n\r\nexport default class SourceValidation {\r\n\r\n    public static validate(source: Source): void {\r\n        let validation = new SourceValidation();\r\n        validation.validateState(source);\r\n    }\r\n\r\n    private constraints: ((s: Source) => void)[];\r\n\r\n    constructor() {\r\n        this.constraints = [\r\n            this.propertyValidation,\r\n            this.durationValidation,\r\n            this.sortOrderValidation\r\n        ];\r\n    }\r\n\r\n    private validateState(sourceRepositoryState: Source): void {\r\n        this.constraints.forEach(c => c(sourceRepositoryState))\r\n    }\r\n\r\n    private propertyValidation = (s: Source): void => {\r\n        let keys: (keyof Source)[] = [\"duration\", \"isEnabled\",\r\n            \"sortOrder\", \"source\", \"title\", \"key\"];\r\n        keys.forEach(k => {\r\n            if (s[k] === undefined)\r\n                throw new MissingPropertyException(k);\r\n        });\r\n    }\r\n\r\n    private durationValidation = (s: Source): void => {\r\n        if (s.duration <= 0)\r\n            throw new DurationOutOfBoundsException(s.duration.toString());\r\n    }\r\n\r\n    private sortOrderValidation = (s: Source): void => {\r\n        if (s.sortOrder < 0)\r\n            throw new InvalidSortOrderException(s.sortOrder.toString());\r\n    }\r\n}\r\n","import SourceValidation from \"./Source\";\r\nimport MissingPropertyException from \"../Exceptions/MissingPropertyException\";\r\n\r\nexport default class SourceRepositoryValidation {\r\n\r\n    public static validate(sourceRepositoryState: SourceRepository): void {\r\n        let validation = new SourceRepositoryValidation();\r\n        validation.validateState(sourceRepositoryState);\r\n    }\r\n\r\n    private constraints: ((s: SourceRepository) => void)[];\r\n\r\n    constructor() {\r\n        this.constraints = [\r\n            this.propertyValidation,\r\n            this.streamValidation\r\n        ];\r\n    }\r\n\r\n    private validateState(sourceRepositoryState: SourceRepository): void {\r\n        this.constraints.forEach(c => c(sourceRepositoryState));\r\n    }\r\n\r\n    private propertyValidation = (s: SourceRepository): void => {\r\n        if (!s.streams)\r\n            throw new MissingPropertyException('streams');\r\n        \r\n    }\r\n\r\n    private streamValidation = (s: SourceRepository): void => {\r\n        s.streams.forEach(stream => SourceValidation.validate(stream));\r\n    }\r\n}","import SourceList from '../source-list.json';\r\nimport SourceRepositoryValidation from \"../SchemaValidators/SourceRepository\";\r\n\r\nconst SourceRepoKey = \"StreamRepoKey_v1\";\r\n\r\nexport default class SourceRepo {\r\n\r\n    public static load(): SourceRepository {\r\n        let repoString = localStorage.getItem(SourceRepoKey);\r\n        if (!repoString)\r\n            return this.emptyRepo();\r\n        return JSON.parse(repoString) as SourceRepository;\r\n    }\r\n\r\n    public static save(sourceRepository: SourceRepository) {\r\n        try {\r\n            SourceRepositoryValidation.validate(sourceRepository)\r\n            let repoString = JSON.stringify(sourceRepository);\r\n            localStorage.setItem(SourceRepoKey, repoString);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    public static emptyRepo(): SourceRepository {\r\n        return {\r\n            streams: SourceList\r\n        }\r\n    }\r\n\r\n}","import React from 'react';\r\nimport Loader from '../Loader/Loader';\r\nimport Cycler from '../Cycler/Cycler';\r\nimport Configuration from '../Configuration/Configuration';\r\nimport SourceRepo from '../../LocalStorage/SourceRepo';\r\n\r\nexport default class Kaleidoscope extends React.Component<KaleidoscopeProps, KaleidoscopeState>{\r\n\r\n    constructor(props: KaleidoscopeProps) {\r\n        super(props);\r\n        this.state = {\r\n            isConfiguring: false,\r\n            sourceRepository: {\r\n                streams: []\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            sourceRepository: SourceRepo.load()\r\n        });\r\n    }\r\n\r\n    openConfiguration = (event: ButtonClickEvent): void => {\r\n        this.setState({\r\n            isConfiguring: true\r\n        });\r\n    }\r\n\r\n    handleSave = (updatedSourceRepo: SourceRepository) => {\r\n        SourceRepo.save(updatedSourceRepo);\r\n        this.setState({\r\n            sourceRepository: updatedSourceRepo\r\n        });\r\n    }\r\n\r\n    doneConfiguringCallback = () => {\r\n        this.setState({\r\n            isConfiguring: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { isConfiguring, sourceRepository } = this.state;\r\n        let sources = sourceRepository.streams.filter(s => s.isEnabled);\r\n        sources.sort((a, b) => a.sortOrder - b.sortOrder);\r\n        return (\r\n            <React.Fragment>\r\n                {isConfiguring && <Configuration doneConfiguring={this.doneConfiguringCallback} sourceRepo={sourceRepository} handleSave={this.handleSave} />}\r\n                {!isConfiguring &&\r\n                    <Loader loadTime={this.props.loadTime} handleConfigureClick={this.openConfiguration}>\r\n                        <Cycler openMenuCallback={this.openConfiguration} sourceList={sources} />\r\n                    </Loader>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './App.scss';\r\nimport { LOAD_TIME } from '../../Constants/environment.constants';\r\nimport Kaleidoscope from '../Kaleidoscope/Kaleidoscope';\r\n\r\nconst App: React.FC = () => {\r\n  let reference = React.createRef() as React.RefObject<HTMLDivElement>;\r\n  return (\r\n    <div className=\"App\" ref={reference} onClick={() => goFullScreen(reference)}>\r\n      <Kaleidoscope loadTime={LOAD_TIME} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst goFullScreen = (reference: React.RefObject<HTMLDivElement>): void => {\r\n  if (reference.current)\r\n    reference.current.requestFullscreen();\r\n}\r\n\r\nexport default App;\r\n","const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        checkValidServiceWorker(swUrl, config);\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './Components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.register();"],"sourceRoot":""}